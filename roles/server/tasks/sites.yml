---
- name: "Create Sites."
  become: true
  ansible.builtin.shell: |
    set -o pipefail
    omd -V {{ item.version }}.{{ checkmk_server_edition }} create {{ item.name }}
  args:
    executable: /bin/bash
    creates: "/omd/sites/{{ item.name }}"
  no_log: true
  loop: "{{ checkmk_server_sites }}"
  when: item.state != "absent"
  register: checkmk_server_sites_created

- name: "Start Sites."
  become: true
  ansible.builtin.shell: |
    set -o pipefail
    omd start {{ item.name }}
  args:
    executable: /bin/bash
    creates: "/opt/omd/sites/{{ item.name }}/tmp/run/live"
  no_log: true
  loop: "{{ checkmk_server_sites }}"
  when: item.state == "started"
  register: checkmk_server_sites_started

- name: "Stop Sites."
  become: true
  ansible.builtin.shell: |
    set -o pipefail
    omd stop {{ item.name }}
  args:
    executable: /bin/bash
    removes: "/opt/omd/sites/{{ item.name }}/tmp/run/live"
  no_log: true
  loop: "{{ checkmk_server_sites }}"
  when: (item.state == "absent") or (item.state == "stopped")
  register: checkmk_server_sites_stopped

- name: "Destroy Sites."
  become: true
  ansible.builtin.shell: |
    set -o pipefail
    (yes yes || true) | omd rm {{ item.name }}
  args:
    executable: /bin/bash
    removes: "/omd/sites/{{ item.name }}"
  no_log: true
  loop: "{{ checkmk_server_sites }}"
  when: item.state == "absent"
  register: checkmk_server_sites_removed

- name: "Update Site Admin Password."
  become: true
  ansible.builtin.shell: |
    set -o pipefail
    echo '{{ item.admin_pw }}' | htpasswd -i /omd/sites/{{ item.name }}/etc/htpasswd cmkadmin
  args:
    executable: /bin/bash
  no_log: true
  loop: "{{ checkmk_server_sites }}"
  when: item.state != "absent"
